/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project"s original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint.
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
{
    "root": true,
    "env": {
        "browser": true,
        "es2020 ": true,
        "node": true,
        "jasmine": true
    },
    "extends": [
        "plugin:jasmine/recommended",
        "prettier/@typescript-eslint",
        "plugin:prettier/recommended",
        "plugin:@typescript-eslint/eslint-recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint",
        "@typescript-eslint/tslint",
        "prettier",
        "@angular-eslint",
        "import",
        "rxjs",
        "ban",
        "jasmine"
    ],
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".json"]
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true
            },
            "alias": {
                "map": [
                    ["src", "./src"]
                ],
                "extensions": [".ts", ".json"]
            }
        }
    },
    "globals": {},
    "rules": {
        "prettier/prettier": "error",
        "import/no-extraneous-dependencies": [
            "error",
            {
                "devDependencies": true
            }
        ],
        "import/no-unresolved": "error",
        "import/prefer-default-export": "off",
        "import/extensions": [
           "error",
           "ignorePackages",
            {
                "ts": "never"
            }
        ],
        "brace-style": [
            "error",
            "1tbs"
        ],
        "comma-dangle": "off",
        "curly": "error",
        "default-case": "error",
        "eol-last": "error",
        "eqeqeq": [
            "error",
            "smart"
        ],
        "guard-for-in": "error",
        "id-blacklist": [
            "error",
            "any",
            "Number",
            "String",
            "Boolean",
            "boolean",
            "Undefined",
            "undefined"
        ],
        "id-match": [
            "error",
            "^[_a-zA-Z0-9$]*$"
        ],
        "camelcase": "off",
        "prefer-destructuring": "off",
        "no-nested-ternary": "off",
        "import/order": [
            "error",
            {
                "newlines-between": "always",
                "pathGroups": [
                    {
                        "pattern": "rxjs/**",
                        "group": "external",
                        "position": "after"
                    }
                ],
                "groups": [
                    [ "builtin", "external"],
                    "internal",
                    ["sibling", "parent"],
                    "index",
                    "object"
                ]
            }
        ],
        "max-len": [
            "error",
            {
                "ignoreRegExpLiterals": false,
                "ignoreStrings": false,
                "code": 120
            }
        ],
        "no-bitwise": "error",
        "no-caller": "error",
        "no-cond-assign": "error",
        "no-console": "off",
        "no-debugger": "error",
        "no-duplicate-imports": "error",
        "no-else-return": ["error", { "allowElseIf": false }],
        "no-empty": "error",
        "no-eval": "error",
        "no-fallthrough": "error",
        "no-invalid-this": "off",
        "no-multiple-empty-lines": [
            "error",
            {
                "max": 1
            }
        ],
        "no-new-wrappers": "error",
        "no-redeclare": "off",
        "no-shadow": "off",
        "no-trailing-spaces": "error",
        "no-underscore-dangle": "off",
        "no-unused-labels": "error",
        "no-var": "error",
        "prefer-const": [
            "error",
            {
                "destructuring": "all"
            }
        ],
        "radix": "error",
        "spaced-comment": [
            "error",
            "always",
            {
                "markers": [
                    "/"
                ]
            }
        ],
        "use-isnan": "error",
        "max-classes-per-file": [
            "error",
            13
        ],
        "valid-typeof": "off",
        "no-prototype-builtins": "off",
        "no-restricted-syntax": "off",
        "no-plusplus": "off",
        "no-param-reassign": "off",
        "rxjs/suffix-subjects": [
            "error",
            {
                "suffix": "\\$"
            }
        ],
        "no-use-before-define": "off",
        "no-constant-condition": "off",
        "no-continue": "off",
        "no-empty-function": [
            "error",
            {
                "allow": ["constructors"]
            }
        ],
        "no-useless-constructor": "off",
        "no-control-regex": "off",
        "no-dupe-class-members": "off",
        "ban/ban": [
            "error",
            {
                "name": "setTimeout",
                "message": "Use observable timer instead or run code when NgZone is stable"
            }
        ],
        "quotes": "off",
        "member-ordering": "off",
        "no-restricted-imports": [
            "error",
            {
                "paths": ["lodash"],
                "patterns": ["lodash/*"]
            }
        ],
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/component-selector": [
            "error",
            {
                "type": "element",
                "prefix": [
                    "app"
                ],
                "style": "kebab-case"
            }
        ],
        "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/directive-selector": [
            "error",
            {
                "type": "attribute",
                "prefix": [
                    "app"
                ],
                "style": "camelCase"
            }
        ],
        "@angular-eslint/no-host-metadata-property": "error",
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/no-outputs-metadata-property": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/explicit-member-accessibility": [
            "error",
            {
                "accessibility": "no-public"
            }
        ],
        "@typescript-eslint/member-delimiter-style": [
            "error",
            {
                "multiline": {
                    "delimiter": "semi",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/quotes": [
            "error",
            "single"
        ],
        "@typescript-eslint/semi": [
            "error",
            "always"
        ],
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/typedef": [
          "error",
          {
            "propertyDeclaration": true,
            "variableDeclaration": true,
            "parameter": true,
            "memberVariableDeclaration": true,
            "arrowParameter": false
          }
        ],
        "@typescript-eslint/explicit-function-return-type": [
            "error",
            {
                "allowExpressions": true
            }
        ],
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "args": "none",
                "argsIgnorePattern": "^_"
            }
        ],
        "@typescript-eslint/lines-between-class-members": [
            "error",
            "always",
            {
                "exceptAfterSingleLine": true
            }
        ],
        "@typescript-eslint/quotes": [
            "error",
            "single",
            {
                "avoidEscape": true
            }
        ],
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/no-redeclare": "error",
        "@typescript-eslint/tslint/config": [
            "error",
            {
                "rulesDirectory": [
                    "node_modules/codelyzer",
                    "node_modules/rxjs-tslint-rules/dist/rules"
                ],
                "rules": {
                    "member-ordering": [
                        true,
                        {
                            "order": [
                                "public-static-field",
                                "public-static-accessor",
                                "public-static-method",
                                "public-instance-field",
                                "public-instance-accessor",

                                "protected-static-field",
                                "protected-static-accessor",
                                "protected-static-method",
                                "protected-instance-field",
                                "protected-instance-accessor",

                                "private-static-field",
                                "private-static-accessor",
                                "private-static-method",
                                "private-instance-field",
                                "private-instance-accessor",

                                "constructor",

                                "public-instance-method",
                                "protected-instance-method",
                                "private-instance-method"
                            ]
                        }
                    ]
                }
            }
        ],
        "jasmine/new-line-before-expect": "off",
        "jasmine/no-global-setup": "off",
        "jasmine/no-spec-dupes": "off"
    }
}

